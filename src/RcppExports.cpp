// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fit_linear_model_rcpp
arma::vec fit_linear_model_rcpp(const arma::mat& X, const arma::vec& Y);
RcppExport SEXP _BIOSTAT625_HW3_fit_linear_model_rcpp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(fit_linear_model_rcpp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// calculate_r_squared
double calculate_r_squared(const arma::vec& Y, const arma::vec& fitted);
RcppExport SEXP _BIOSTAT625_HW3_calculate_r_squared(SEXP YSEXP, SEXP fittedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type fitted(fittedSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_r_squared(Y, fitted));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BIOSTAT625_HW3_fit_linear_model_rcpp", (DL_FUNC) &_BIOSTAT625_HW3_fit_linear_model_rcpp, 2},
    {"_BIOSTAT625_HW3_calculate_r_squared", (DL_FUNC) &_BIOSTAT625_HW3_calculate_r_squared, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_BIOSTAT625_HW3(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
